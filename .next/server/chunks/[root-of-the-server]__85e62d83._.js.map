{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/yukia/Downloads/koku-lesson-planner/app/api/generate/route.ts"],"sourcesContent":["// app/api/generate/route.ts\r\n\r\nimport { NextResponse, NextRequest } from \"next/server\";\r\nimport OpenAI from \"openai\";\r\n\r\n// OpenAI クライアントの初期化（.env.local に OPENAI_API_KEY=sk-... が設定されていること）\r\nconst openai = new OpenAI({\r\n  apiKey: process.env.OPENAI_API_KEY!,\r\n});\r\n\r\nexport async function GET() {\r\n  return NextResponse.json({ error: \"Use POST\" }, { status: 405 });\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  // 1. リクエスト JSON をパース\r\n  let payload: any;\r\n  try {\r\n    payload = await request.json();\r\n    console.log(\"▶ api/generate payload:\", payload);\r\n  } catch (e: any) {\r\n    console.error(\"❌ payload parse error:\", e);\r\n    return NextResponse.json(\r\n      { error: \"Invalid JSON payload\", detail: e.message },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  // 2. prompt が文字列として存在するかチェック\r\n  const { prompt } = payload;\r\n  if (typeof prompt !== \"string\" || prompt.trim() === \"\") {\r\n    return NextResponse.json(\r\n      { error: \"prompt が必要です（文字列を送ってください）\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  // 3. 環境変数チェック\r\n  if (!process.env.OPENAI_API_KEY) {\r\n    console.error(\"❌ OPENAI_API_KEY is not set\");\r\n    return NextResponse.json(\r\n      { error: \"Server configuration error: missing API key\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n\r\n  // 4. OpenAI (GPT-4) 呼び出し\r\n  let completionText: string;\r\n  try {\r\n    const resp = await openai.chat.completions.create({\r\n      model: \"gpt-4\",\r\n      messages: [\r\n        {\r\n          role: \"system\",\r\n          content:\r\n            \"あなたは小学校の国語の授業プランナーです。以下のユーザーの指示に従ってください。\",\r\n        },\r\n        { role: \"user\", content: prompt },\r\n      ],\r\n      temperature: 0.7,\r\n      max_tokens: 1500,\r\n    });\r\n    completionText = resp.choices?.[0]?.message?.content ?? \"\";\r\n    console.log(\"▶ OpenAI response:\", completionText);\r\n  } catch (e: any) {\r\n    console.error(\"❌ OpenAI API error:\", e);\r\n    return NextResponse.json(\r\n      { error: \"OpenAI API call failed\", detail: e.message },\r\n      { status: 500 }\r\n    );\r\n  }\r\n\r\n  // 5. コードフェンス除去 & トリム\r\n  const cleaned = completionText.replace(/```json/g, \"\").replace(/```/g, \"\").trim();\r\n\r\n  // 6. JSON パースして返却\r\n  try {\r\n    const parsed = JSON.parse(cleaned);\r\n    return NextResponse.json(parsed);\r\n  } catch (e: any) {\r\n    console.error(\"❌ JSON parse failed:\", e, cleaned);\r\n    return NextResponse.json(\r\n      { error: \"Invalid JSON from AI\", raw: cleaned },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAE5B;AACA;;;AAEA,mEAAmE;AACnE,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAM,CAAC;IACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc;AACpC;AAEO,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAW,GAAG;QAAE,QAAQ;IAAI;AAChE;AAEO,eAAe,KAAK,OAAoB;IAC7C,qBAAqB;IACrB,IAAI;IACJ,IAAI;QACF,UAAU,MAAM,QAAQ,IAAI;QAC5B,QAAQ,GAAG,CAAC,2BAA2B;IACzC,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAwB,QAAQ,EAAE,OAAO;QAAC,GACnD;YAAE,QAAQ;QAAI;IAElB;IAEA,6BAA6B;IAC7B,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,IAAI,OAAO,WAAW,YAAY,OAAO,IAAI,OAAO,IAAI;QACtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;IAEA,cAAc;IACd,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;QAC/B,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8C,GACvD;YAAE,QAAQ;QAAI;IAElB;IAEA,yBAAyB;IACzB,IAAI;IACJ,IAAI;QACF,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAChD,OAAO;YACP,UAAU;gBACR;oBACE,MAAM;oBACN,SACE;gBACJ;gBACA;oBAAE,MAAM;oBAAQ,SAAS;gBAAO;aACjC;YACD,aAAa;YACb,YAAY;QACd;QACA,iBAAiB,KAAK,OAAO,EAAE,CAAC,EAAE,EAAE,SAAS,WAAW;QACxD,QAAQ,GAAG,CAAC,sBAAsB;IACpC,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA0B,QAAQ,EAAE,OAAO;QAAC,GACrD;YAAE,QAAQ;QAAI;IAElB;IAEA,qBAAqB;IACrB,MAAM,UAAU,eAAe,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI;IAE/E,kBAAkB;IAClB,IAAI;QACF,MAAM,SAAS,KAAK,KAAK,CAAC;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,wBAAwB,GAAG;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAwB,KAAK;QAAQ,GAC9C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}